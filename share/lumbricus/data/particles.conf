//particle types for the game
//graphic sets (wwp.conf, freegraphics.conf) have to provide the animations and
//  sounds for this (redoing particles for each set would be too much work)

//later we may want to have graphic set specific definitions for some particle
//  types; that should be simple to add

//this defines ParticleType entries
//those will be referred by the "particle" property in sprite states
//note that these live in the resources namespace, so be careful about names
particles {
    //each entry defines a ParticleType, that gets added to the resources
    //typically, it will just act as particle emitter
    p_rocket {
        //emit 20 particles / sec
        emit_interval = "25ms-30ms"
        //proposal: enable increasing the rate depending from velocity
        //-- add 1 particle/sec to emit_rate per 10 velocity units
        //-- emit_rate_add_from_vel = "10"
        //keep emitting particles forever
        emit_count = "max"
        //on each emit, use 1 of these particles (random pick)
        //each entry defines a further ParticleType
        emit {
            {
                //color = "red"
                //animation can be a value, or a list (-> random selection)
                animation = "smokepuff_white"
                wind_influence = "0"
                initial_speed = "0"
                absolute_speed = "10"
                //add to emitter pos, along emitter velocity vector
                offset = "-15"
                spread_angle = "360" //in deg
            }
        }
    }
    p_rocket_fire {
        //play a sound when particle is created
        sound = "a_rocket_fire"
    }
    p_throw_fire {
        sound = "a_throw_fire"
    }
    p_homing_activate {
        sound = "a_homing"
    }
    p_girder_place {
        sound = "a_girder_place"
    }
    p_freeze {
        sound = "a_freeze"
    }
    p_scales {
        sound = "a_scales"
    }
    p_napalmsmoke {
        emit_interval = "0.8s-1.2s"
        //seconds to wait until emitting starts
        emit_delay = "0s-1s"
        emit_count = "max"
        emit {
            {
                animation { "smoke_black_size1" "smoke_black_size2" }
                gravity = "-200"
                initial_speed = "0"
                wind_influence = "0.7-1.0"
                //float effect
                bubble_x = "0.7"
                bubble_x_h = "100"
            }
        }
    }
    //like p_napalmsmoke, but only emit some particles and then die
    p_napalmsmoke_short {
        emit_count = "1"
        //copy emit subnodes from p_napalmsmoke
        //disgusting hack; solution: use a scripting language to create the
        //  objects, instead of declaring them as .conf
        //emit = "p_napalmsmoke"
        emit {
            {
                animation { "smoke_white_size1" "smoke_white_size2" }
                gravity = "-200"
                initial_speed = "0"
                wind_influence = "0.7-1.0"
                //float effect
                bubble_x = "0.7"
                bubble_x_h = "100"
            }
        }
        sound = "a_sizzle"
    }
    p_holy {
        emit_interval = "50ms"
        emit_count = "max"
        emit {
            {
                //xxx only emit on impact
                animation = "holy_particle"
                initial_speed = "0"
                absolute_speed = "50"
                wind_influence = "0"
                offset = "-0"
                spread_angle = "360"
            }
        }
        sound = "a_holy"
    }
    p_supersheep_launch {
        sound = "a_supersheep_release"
    }
    p_supersheep {
        emit_interval = "20ms-40ms"
        emit_count = "max"
        emit {
            {
                animation = "holy_particle"
                initial_speed = "0"
                absolute_speed = "30"
                wind_influence = "0.5"
                offset = "-20"
                spread_angle = "360"
            }
        }
        sound = "a_supersheep_fly"
        sound_looping = "true"
    }
    p_mbbomb {
        emit_interval = "100ms-150ms"
        emit_count = "max"
        emit {
            {
                animation = "mbbomb_particle"
                initial_speed = "0"
                absolute_speed = "25"
                wind_influence = "0"
                spread_angle = "360"
            }
        }
    }
    p_donkey {
        sound = "a_donkey_create"
    }
    p_meteor {
        sound = "a_armageddon"
    }
    p_rocketcharge {
        sound = "a_rocket_charge"
    }
    p_beam {
        sound = "a_beam"
    }
    p_dynamite {
        sound = "a_dynamite_fuse"
        sound_looping = "true"
    }
    p_cow {
        sound = "a_cow_release"
    }
    p_granny {
        sound = "a_granny"
        sound_looping = "true"
    }
    p_sallyarmy {
        sound = "a_sallyarmy"
        sound_looping = "true"
    }
    p_sheep {
        sound = "a_sheep"
    }
    p_projectiledrown {
        emit_interval = "20ms-40ms"
        emit_count = "max"
        emit {
            {
                animation { "bubble0" "bubble1" "bubble2" "bubble3" }
                initial_speed = "0"
                gravity = "-100"
                bubble_x = "0.5"
                bubble_x_h = "100"
                water_area = "under"
            }
        }
        sound = "a_splash"
    }
    p_waterbubble {
        animation { "bubble0" "bubble1" }
        gravity = "-100"
        bubble_x = "0.5"
        bubble_x_h = "100"
        water_area = "under"
    }
    p_spark {
        animation { "fire_particle" }
        gravity = "600"
        emit_interval = "0.2s-0.4s"
        //seconds to wait until emitting starts
        emit_delay = "0s-0.3s"
        emit_count = "4"
        emit {
            {
                animation { "smoke_black_size1" }
                gravity = "-200"
                initial_speed = "0"
                wind_influence = "0.7-1.0"
                //float effect
                bubble_x = "0.7"
                bubble_x_h = "100"
            }
        }
    }
    //a particle that just plays sound
    //maybe we could create explosion particles for each explosion size, but
    //  that would require rewriting showExplosion() (and maybe particle
    //  emitters aren't able to do everything showExplosion() would need)
    p_explosion_sound {
        //NOTE: we just don't use an animation, although we could
        //for each explosion, one of those is played (random pick)
        sound {
            "a_explosion1"
            "a_explosion2"
            "a_explosion3"
        }
    }
    p_mine_flash {
        //plays "activate", then repeats "tick"
        //interval/delay needs to be in sync with the "mine_flashing" animation
        emit_interval = "250ms"
        emit_delay = "250ms"
        emit_count = "max"
        emit {
            {
                sound = "a_mine_tick"
            }
        }
        sound = "a_mine_activate"
    }
}
