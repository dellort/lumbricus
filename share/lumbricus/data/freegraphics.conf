//free graphics set (free as in Stali... I mean Stallman)

require_resources {
    "windmeter.conf"
    "freedata/resources.conf"
}

water_path = "freedata/water"

resources {
    bitmaps {
        border_segment = "border_segment.png"
    }
    music {
        //pick your own
        game = "music.ogg"
    }
}

sky {
    //list of animation resources for the clouds
    clouds {
        "missing"
    }
}

explosions {
    shockwave1 {
        "missing_anim"
        "missing_anim"
        "missing_anim"
        "missing_anim"
    }
    shockwave2 {
        "missing_anim"
        "missing_anim"
        "missing_anim"
        "missing_anim"
    }
    comictext {
        "missing_anim"
        "missing_anim"
        "missing_anim"
        "missing_anim"
    }
    smoke {
        "missing_anim"
        "missing_anim"
        "missing_anim"
        "missing_anim"
    }
    sizetreshold { "25" "100" "150" "200" }
}


sequences {

    s_worm {
        walk = "missing_worm"
        walk_blowtorch = "missing_worm"
        fly_fall = "missing_worm"
        fly_slide = "missing_worm"
        fly_roll = "missing_worm"
        fly_heavy = "missing_worm"
        jump_normal = "missing_worm"
        jump_backflip = "missing_worm"
        drown = "missing_worm"
        win = "missing_worm"
        rope = "missing_worm"
        drill = "missing_worm"

        die = "missing_anim"
        beaming = "missing_anim"
        reverse_beaming = "missing_anim"
        bounce_minor = "missing_worm"
        bounce_major = "missing_worm"
        jump_start = "missing_worm"
        jump_to_fall = "missing_worm"

        stand = "missing_worm"

        jetpack = "missing_worm"

        parachute = "missing_worm"

    }

    s_crate_weapon {
        normal = "crate"
        fly = "crate"
        drown = "crate"
        beam = "crate"
    }

    s_crate_med {
        normal = "crate"
        fly = "crate"
        drown = "crate"
        beam = "crate"
    }

    s_crate_tool {
        normal = "crate"
        fly = "crate"
        drown = "crate"
        beam = "crate"
    }

    s_mine {
        normal = "mine"
        flashing = "mine"
        drown = "mine"
    }

    s_barrel {
        normal = "barrel"
        drown = "barrel"
    }

    s_holy {
        normal = "missing"
        drown = "missing"
    }
    s_banana {
        normal = "missing"
        drown = "missing"
    }
    s_bazooka {
        normal = "missing"
        drown = "missing"
    }
    s_clustershard {
        normal = "missing"
        drown = "missing"
    }
    s_cluster {
        normal = "missing"
        drown = "missing"
    }
    s_dynamite {
        normal = "missing"
        drown = "missing"
    }
    s_esel {
        normal = "missing"
        drown = "missing"
    }
    s_grenade {
        normal = "missing"
        drown = "missing"
    }
    s_mingvase {
        normal = "missing"
        drown = "missing"
    }
    s_mingshard1 {
        normal = "missing"
        drown = "missing"
    }
    s_molotov {
        normal = "missing"
        drown = "missing"
    }
    s_mortar {
        normal = "missing"
        drown = "missing"
    }
    s_granny {
        normal = "missing"
        drown = "missing"
    }
    s_sally_army {
        normal = "missing"
        drown = "missing"
    }
    s_sallyshard {
        normal = "missing"
        drown = "missing"
    }
    s_cow {
        normal = "missing"
        drown = "missing"
    }
    s_airstrike {
        normal = "missing"
        drown = "missing"
    }
    s_sheepstrike {
        normal = "missing"
        drown = "missing"
    }
    s_carpetstrike {
        normal = "missing"
        drown = "missing"
    }
    s_meteor {
        normal = "missing"
        drown = "missing"
    }
    s_grave {
        n0 = "missing"
        drown0 = "missing"
        n1 = "missing"
        drown1 = "missing"
        n2 = "missing"
        drown2 = "missing"
        n3 = "missing"
        drown3 = "missing"
        n4 = "missing"
        drown4 = "missing"
        n5 = "missing"
        drown5 = "missing"
    }

    s_mbbomb {
        normal = "missing"
        drown = "missing"
    }
    s_sheep {
        normal = "missing"
        helmet = "missing" //unused?
        drown = "missing"
        super_red = "missing"
        super_blue = "missing"
        super_blue_underwater = "missing"
    }

    s_homing {
        inactive = "missing"
        active = "missing"
        active_underwater = "missing"
        drown = "missing"
    }


    s_napalm {
        normal = "missing"
    }

    //dummy for invisible sprites
    s_invisible {
    }
}


//this defines ParticleType entries
//those will be referred by the "particle" property in sprite states
//note that these live in the resources namespace, so be careful about names
particles {
    //each entry defines a ParticleType, that gets added to the resources
    //typically, it will just act as particle emitter
    p_rocket {
        //emit 20 particles / sec
        emit_interval = "25ms-30ms"
        //proposal: enable increasing the rate depending from velocity
        //-- add 1 particle/sec to emit_rate per 10 velocity units
        //-- emit_rate_add_from_vel = "10"
        //keep emitting particles forever
        emit_count = "max"
        //on each emit, use 1 of these particles (random pick)
        //each entry defines a further ParticleType
        emit {
            {
                //color = "red"
                //animation can be a value, or a list (-> random selection)
                animation = "missing_anim"
                wind_influence = "0"
                initial_speed = "0"
                absolute_speed = "10"
                //add to emitter pos, along emitter velocity vector
                offset = "-15"
                spread_angle = "360" //in deg
            }
        }
        //play a sound when particle is created
        //xxx better: make firing the gun trigger the sound (cf. homing missile)
        //sound = "a_rocket_fire"
    }
    p_napalmsmoke {
        emit_interval = "0.8s-1.2s"
        //seconds to wait until emitting starts
        emit_delay = "0s-1s"
        emit_count = "max"
        emit {
            {
                animation { "missing_anim" }
                gravity = "-200"
                initial_speed = "0"
                wind_influence = "0.7-1.0"
                //float effect
                bubble_x = "0.7"
                bubble_x_h = "100"
            }
        }
    }
    //like p_napalmsmoke, but only emit some particles and then die
    p_napalmsmoke_short {
        emit_count = "1"
        //copy emit subnodes from p_napalmsmoke
        //disgusting hack; solution: use a scripting language to create the
        //  objects, instead of declaring them as .conf
        //emit = "p_napalmsmoke"
        emit {
            {
                animation { "missing_anim"}
                gravity = "-200"
                initial_speed = "0"
                wind_influence = "0.7-1.0"
                //float effect
                bubble_x = "0.7"
                bubble_x_h = "100"
            }
        }
        //sound = "a_sizzle"
    }
    p_holy {
        emit_interval = "50ms"
        emit_count = "max"
        emit {
            {
                //xxx only emit on impact
                animation = "missing_anim"
                initial_speed = "0"
                absolute_speed = "50"
                wind_influence = "0"
                offset = "-0"
                spread_angle = "360"
            }
        }
        //sound = "a_holy"
    }
    p_supersheep {
        emit_interval = "20ms-40ms"
        emit_count = "max"
        emit {
            {
                animation = "missing_anim"
                initial_speed = "0"
                absolute_speed = "30"
                wind_influence = "0.5"
                offset = "-20"
                spread_angle = "360"
            }
        }
        //sound = "a_supersheep_release"
    }
    p_mbbomb {
        emit_interval = "100ms-150ms"
        emit_count = "max"
        emit {
            {
                animation = "missing_anim"
                initial_speed = "0"
                absolute_speed = "25"
                wind_influence = "0"
                spread_angle = "360"
            }
        }
    }
    p_donkey {
        //sound = "a_donkey_create"
    }
    p_meteor {
        //sound = "a_armageddon"
    }
    p_rocketcharge {
        //sound = "a_rocket_charge"
    }
    p_beam {
        //sound = "a_beam"
    }
    p_dynamite {
        //sound = "a_dynamite_fuse"
        sound_looping = "true"
    }
    p_cow {
        //sound = "a_cow_release"
    }
    p_granny {
        //sound = "a_granny"
        sound_looping = "true"
    }
    p_sheep {
        //sound = "a_sheep"
    }
    p_projectiledrown {
        emit_interval = "20ms-40ms"
        emit_count = "max"
        emit {
            {
                animation { "missing" }
                initial_speed = "0"
                gravity = "-100"
                bubble_x = "0.5"
                bubble_x_h = "100"
                underwater = "true"
            }
        }
        //sound = "a_splash"
    }
    p_waterbubble {
        animation { "missing" }
        gravity = "-100"
        bubble_x = "0.5"
        bubble_x_h = "100"
        underwater = "true"
    }
    p_spark {
        animation { "missing_anim" }
        gravity = "600"
        emit_interval = "0.2s-0.4s"
        //seconds to wait until emitting starts
        emit_delay = "0s-0.3s"
        emit_count = "4"
        emit {
            {
                animation { "missing_anim" }
                gravity = "-200"
                initial_speed = "0"
                wind_influence = "0.7-1.0"
                //float effect
                bubble_x = "0.7"
                bubble_x_h = "100"
            }
        }
    }
    //a particle that just plays sound
    //maybe we could create explosion particles for each explosion size, but
    //  that would require rewriting showExplosion() (and maybe particle
    //  emitters aren't able to do everything showExplosion() would need)
    p_explosion_sound {
        //NOTE: we just don't use an animation, although we could
        //for each explosion, one of those is played (random pick)
        /+
        sound {
            "a_explosion1"
            "a_explosion2"
            "a_explosion3"
        }
        +/
    }
}
