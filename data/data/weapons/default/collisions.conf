//xxx where to put that???
collisions {
    //explanation about the collision stuff
    //there's a matrix that says for each pair of collision types if they can
    //collide
    //the "hit"-section modifies this matrix
    //a collision type also can be the parent of several "sub classes"; all
    //things that collide with the parent class collide with the sub classes as
    //well (but not the other way around)
    //e.g. there's the special collision type "all", which is the parent of all
    //existing collision types

    //define names for collision types
    //I only require this to be able to catch spelling errors
    define = "ground projectile waterobj object weapon napalm
        player projectile_noworm water projectile_drown levelobject"

    //define aliases for groups of objects
    //the right side of an entry is turned into a superclass of the left side
    //  class = superclass
    //there's also the special collision name "all", which is a superclass of
    //all collision names (like Object in most sane programming languages)
    classes {
        levelobject = "object"
        weapon = "object"
        projectile = "weapon"
        projectile_noworm = "weapon"
        napalm = "weapon"
        player = "object"
    }

    //define what collides with what
    //
    //for each entry, the left-side object collides with the right-side ones
    //with a="b", a collides with b (this is symmetric, b also collides with a)
    //
    //there also can be one than more collision type in the value part:
    //e.g. a = "b c d" means (a, b), (a, c), and (a, d) are pairs of objects
    //which sollide with each other, but e.g. (b, c) don't
    //needed at least because names can't be more than one time in a ConfigNode
    //
    //if one of these objects is a super-class, all sub-classes collide as well
    //so if a is the superclass of c, and b the superclass of d,
    // a="b" means that (a, b), (c, b), (c, d) and (a, d) collide
    hit {
        ground = "object projectile"
        player = "projectile"
        water = "all"
        napalm = "napalm"
        levelobject = "levelobject player projectile"
    }

    //about special collision names:
    // "all" _matches_ all collision ids (it's the [indirect] superclass of all)
    // "always" _collides_ with all collision ids (except "never")
    // "never" never collides with anything
    //"all" and "always" are two totally different things for various stupid
    //reasons; in short, when an object should collide with everything,
    //either directly use "always" as collision ID, or create a new collision ID
    //and add a line like this into the hit{}-section: <yourid> = "all"
}
