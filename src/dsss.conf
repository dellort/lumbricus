name = lumbricus
defaulttargets = lumbricus.d

[*]
version (!Tango) {
    prebuild=error Lumbricus requires Tango.
}
version (Posix) {
    prebuild=error If you can, use minibuild.py, otherwise comment this line
    # arguments passed to the build tool (rebuild)
    # libdl is needed by Derelict
    # librt is for my timer hack (for clock_gettime)
    # -no-export-dynamic is a hack to make Derelict work with gdc on Linux
    # "-L-z -Lmuldefs": nasty hack to avoid linker errors on Linux with dsss and dmd
    #    when doing incremental builds, works with dsss 0.73, but not 0.71
    # -llrt was needed for some hackery I commented out and forgot
    # -full for dmd fuckery (edit rebuild.conf/dmd-posix-tango to oneatatime=no)
    buildflags += -lldl -llz -full
    debugflags = -debug -unittest -g
    #releaseflags = -release -O
    #always debug build
    releaseflags = -debug -unittest -g
}
version (Windows) {
    buildflags = -llzlib
    debugflags = -debug -unittest -g
    releaseflags = -release -O -inline -L/SUBSYSTEM:WINDOWS:4.0
}

[lumbricus.d]
target = ../bin/lumbricus
version (Windows) {
    # executable icon
    prebuild = rcc lumbricus.rc
    buildflags = -llzlib lumbricus.res
}

[unworms.d]
target = ../bin/unworms

[extractdata.d]
target = ../bin/extractdata

[sdlimginfo.d]
target = ../bin/sdlimginfo

[luatest.d]
target = ../bin/luatest

[lumbricus_server.d]
target = ../bin/lumbricus_server
