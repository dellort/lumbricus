This is Lumbricus Terrestris. Sorry, it's at a very early alpha/beta state,
it is not really ready yet.

Slogan: "Instead of following the principle of KISS, we bring you THIS!"

WARNING: Currently needs original worms files to run at all. Probably it only
works with the version of WWP which was available to us. You need to compile and
run the program "extractdata" and place the resulting files into the data/data2
directory.

WARNING 2: Unless you are seriously masochistic, don't try to compile the sourcecode. Just don't. You'll fail and end up hating us and D.

Actually, Lumbricus is completely independent from WWP and can't read WWP
datafiles (which is why there's an extra converter).
At some time we'll make sure it works just with the data from this SVN.
We would need a graphic artists to produce a free, nice-looking game.

The code is written in the D Programming Language version 1.x, see:
http://www.digitalmars.com/d/1.0/

There's also a little info on our project page:
https://gna.org/projects/lumbricus

Version status for tools and libraries:
- faulty (Linux):
    D compiler:
        You need one of those...
        dmd:
            no official version works
            you need 1.055 with docs/dmd-1055-lumbricus.patch
        ldc: probably doesn't work at all
        gdc: forget it
    tango:
        svn r5396 (trunk): works
        release 0.99.9: may work
    Derelict:
        http://svn.dsource.org/projects/derelict/trunk/
        svn r441: works
            for DerelictUtil, DerelictFT, DerelictGL, DerelictGLU, DerelictSDL, DerelictAL
    NOTE: the corresponding C libs usually are stable, because they're written in C, and not in D (where each new compiler version might break everything, *sigh*)

Building it...

    Forget it. There are only two people in the world who can build it.
    Could ask us on #lumbricus, though.

Required libraries:
- Dynamic linked (.dll/.so):
  - SDL
  - SDL_image
  - Freetype
  - Zlib
  - Lua 5.1

  - ENet (enet.bespin.org) (optional)
  - FMod (optional)
  - OpenAL (optional)
  For Win32, all required .dll files can be found in <svn_root>/downloads/win32_dlls
- Static linked D libraries:
  - Derelict for the 2 SDL libraries
  - Tango (comes not with DMD)

Using the WWP data converter:
  extractdata expects the Worms(TM) directory and an output
  dir as arguments, and converts the file to images/conf-files Lumbricus can
  understand. Call it like this:

   extractdata pathtowwp

  Note that this needs some additional data files from
    trunk/share/lumbricus/wimport
  The files are searched in <path_to_extractdata_binary>/../share/lumbricus/wimport,
  so if you leave your executable in the default output path you should be fine.

  The WWP datafiles just contain lists of compressed images/animations, which
  are obviously (?) only addressed by their index-number. So we had to create
  our own description file, which maps the animation index to a name. This is
  trunk/bin/tools/animations.txt. If your WWP datafiles are somehow different,
  the animation numbers in animations.txt may need to be changed.

  To inspect the WWP datafiles, you can unpack them with unworms (using
  extractdata is impractical, because it only converts the animations in
  animations.txt). Compile unworms with "dsss build ../bin/tools/unworms". You
  can call it on .dir, .bnk, .img and .spr files.
