! PITA (hacks entfernen/neuschreiben, kompliziert, wenig gewinn), - Fix/Change, 
+ kleines Feature, * großes, langfristiges Feature, *** völlig unmöglich, 
[] wurde versucht, aber nur kompromiss wurde implementiert oder es hat nicht geklappt


== Sonstiges/Minor ==
[- userdaten (mergen von konfigfiles)]
- locales: übersetzungen vergleichen (z.b. de mit en -> fehlende einträge finden)
[- locales: zur laufzeit wechseln / neuladen]
- task spezifische commandos/hotkeys (ähnlich wie in loadsafe.d)
   (und den gräuslichen hack in commandline.d entfernen)
- debugging: würmer auswählen und GameObject-Felder anzeigen lassen
! generator.d: reduziere komplexität indem "generierte" level nur noch als lexel-array gespeichert werden (statt als gefüllte polygone); verschiebe das laden/speichern von savegames(bzw. netzwerk level) nach level.d; mache strukturen in level.d vllt. serialisierbar (statt manueller lade/speicher code); in generator.d würde nur noch code zum rendern bleiben + müllcode zum laden und speichern von templates (lol leveledit.d); vllt. savegames/netzwerklevels immer als komplette bitmap speichern?; danach kann glevel.d das zeug aus level.d direkt verwenden und ist weniger hackig
- hashcheck für savegames und insbesondere netzwerklevels
+ beliebige game objekte in vorgenerierten leveln (ähnlich minen, aber vom leveldesigner platziert, beispiel: feste levelränder als objekte)

== bekannte, lösbare Bugs ==
- wurm, der im napalm kocht, zeigt animation für unkontrollierten/schnellen fall an (sollte sein: rutsch animation)
! napalm ist sehr langsam, minenagriff nicht => ?
- Wurm am Jetpack wird bei Explosionen kaum weggestoßen (Physik velocity_constraint Fehler); manchmal auch ohne Jetpack??
- Kistenspion für alle aktiven Teams sichtbar
- Erdbeben stößt die Würmer nicht herum
- Homing missile trifft nix
- Superschaf fliegt auch 15sec weiter, wenn der Wurm nicht mehr dran ist
- Kontrolle wird nicht genommen, wenn man ein Höhlenlevel nach links/rechts verlässt
- Unterwasser-Waffen kollidieren mit der versunkenen, unsichtbaren Landschaft
! Würmer/Objekte springen aus dem Wasser raus (mit Sink-Animation)


== GUI (allgemeine Features) ==
+ richtige GUI listen
+ key bindings editor
+ flash-artiges System für GUI-Animationen (widget einem pfad folgen lassen)
[* CSS-artige formatierungen für GUI]
- button für windows pinnen/entpinnen
*** GUI enthässlichen

== GUI spielspezifisch (Dialoge) ==
* Netzwerk-GUI (Spielerliste, Scores, Chat, Ping/Lag/Warte-auf-Server)
+ Waffenset-Editor (mit Kisten-Waffen)
+ Singleplayer-Spiel-Dialog erweitern (Optionen, mehr Team-Einstellungen, Templates laden/speichern)
[+ Netzwerk-Server-erstell GUI (ähnlich Singleplayer, evtl. verbinden mit s.o.)]
+ Optionsmenü (Sprache, Video, Sound etc.)
+ Locale-Tool ("missing id" finden, Locales vergleichen, aktuelle Locale neu laden)


== Spiellogik/Gameengine ==
* physik: box stacking
  (zusätzliche ideen: bewegende platformen, jump pads, wurmlöcher)
[- kein Force objekt für explosionen erzeugen]
- statt aktive Teams aktive TeamMembers
[- 1-frame bug bei würmern]
* Spiel über mehrere Runden (Scores, Waffen sammeln, Statistiken, Gesamtsieg)
+ Spiel-Statistiken, insb. Team- und Wurm-bezogene
+ Mehr Powerup-Kisten (Niedrige Schwerkraft etc.)
- Level-Generator: Objekt-/Brückenplatzierung überarbeiten (Decke, Wand links/rechts etc.)
*** KI
*** Scripting

== Spiel-Anzeige (Grafiken, Präsentation) ==
+ Waffen-Timer anzeigen
* partikel, sounds
* "stub" gpl daten (strichmännchen)
*** gpl daten (vollständig)


== Waffen ==
+ Buddelwaffen
+ Superwaffen (Armageddon, Atomtest, Schafsangriff, Teppichangriff, MB-Bombe etc.)
+ Lokale-Suche-Waffen (Taube, Zauberkugel)
+ Fallschirm, Bungee

- Napalm verbessern (Ruckeln verhindern, Würmer mehr wegstoßen, vll. etwas "klebriger" machen)
- Molotov-Cocktail brennt über mehrere Züge
+ Luftangriff-Steuerung (Mauszeiger, links/rechts)
+ Begrenzte Jetpack-Flugdauer mit Anzeige

! Steuerung entrümpeln, unabhängig von Würmern machen (worm.d)


== Netzwerk ==
[- Teams: Waffenset-Zuordnung, Lebenspunkte vom Server behandeln bzw. überprüfen,
         nicht allein den Client entscheiden lassen (Fairness)]
+ Server im Verbindungs-Dialog pingen bzw. mehr Informationen anzeigen
- Replays überprüfen/abstellen
+ Savegames
- Fix für spielbeeinflussende Befehle (z.B. slowdown), die mom. keine Timestamps haben
+ Ready-Check zum Spielstart
*** Interpolation/Dead reckoning/Lag compensation/sowas in die Richtung, muhahar (siehe Deadlock)
*** determinismus garantieren (benutzung der FPU ist ein problem, da nicht alle plattformen die gleiche präzission für floating point haben), z.b. fixed point zahlen benutzen, oder regelmäßig zustand der clienten wieder synchronisieren
- einfache erkennung von clients mit abweichender simulation (periodisch einen einfachen engine-hash berechnen und an den server schicken)
* Client-Netzwerkcode in Thread verlagern (Performance/genaue Ping-Werte)
